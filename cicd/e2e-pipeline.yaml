pool:
  name: builders

# parameters:
# - name: workspace_env
#   type: string
#   values:
#     - dev
#     - sbox
#     - prod
#     - dr
#     - perf    
# - name: action
#   type: string
#   values:
#     - plan
#     - apply
#     - destroy      

variables:
- name: dockerfileBackendPath
  value: '../flask-pytorch-backend\Dockerfile_backend'
- name: dockerfileFrontendPath
  value: '../flask-pytorch-backend\Dockerfile_frontend'


# - name: tfvars_location
#   value: "tfvars/${{ parameters.workspace_env }}.tfvars"  

# - name: aws-key-id
#   ${{ if eq(parameters['workspace_env'], 'dev') }}:
#     value: "***"
#   ${{ if eq(parameters['workspace_env'], 'prod') }}:
#     value: "***"


stages:
- stage: Docker Login
  jobs:
  - job: login  
    displayName: Login to Docker Hub 
    steps:
      - task: Docker@2
        displayName: Login to Docker Hub
        inputs:
          command: login
          containerRegistry: dockerRegistryServiceConnection

- stage: Docker Build backend
  jobs:
  - job: build  
    displayName: build backend image   
    steps:
      - task: Docker@2
        displayName: Build and push an image to azrue container registry
        inputs:
          containerRegistry: $(dockerRegistryServiceConnection)
          repository: $(imageRepository)
          dockerfile: $(dockerfileBackendPath)
          command: buildAndPush  
          # arguments: $(build_arg_arguments)
          tags: |
            $(Build.SourceVersion)
            latest

- stage: Docker Build frontend
  jobs:
  - job: build  
    displayName: build frontend image   
    steps:
      - task: Docker@2
        displayName: Build and push an image to azrue container registry
        inputs:
          containerRegistry: $(dockerRegistryServiceConnection)
          repository: $(imageRepository)
          dockerfile: $(dockerfileFrontendPath)
          command: buildAndPush  
          tags: |
            $(Build.SourceVersion)
            latest
            